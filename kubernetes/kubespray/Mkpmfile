include $(MKPM)/mkpm
include $(MKPM)/dotenv

TERRAFORM ?= terraform
CLUSTER_NAME ?= rock8s
DATA_DIR ?= $(HOME)/.local/share/rock8s/$(CLUSTER_NAME)
PROVIDER_DIR ?= $(DATA_DIR)/kubespray
ANSIBLE_PLAYBOOK ?= $(PROVIDER_DIR)/env/bin/ansible-playbook
export LANG := C.UTF-8
export LC_ALL := C.UTF-8

.PHONY: format
format:
	@$(TERRAFORM) fmt --recursive

.PHONY: prepare
prepare:
	@sh $(CURDIR)/scripts/prepare.sh

.PHONY: init
init: prepare $(PROVIDER_DIR)
	@. $(ROOT_DIR)/.env && \
		$(TERRAFORM) init \
		-backend-config="path=$(PROVIDER_DIR)/terraform.tfstate"

$(PROVIDER_DIR):
	@mkdir -p $(PROVIDER_DIR)

.PHONY: apply
apply: init
	@. $(ROOT_DIR)/.env && \
		$(TERRAFORM) apply

.PHONY: install +install
install: apply +install
+install:
	@cd $(PROVIDER_DIR)/kubespray && \
		$(ANSIBLE_PLAYBOOK) \
			-i inventory/sample/inventory.ini \
			-u admin --become --become-user=root \
			cluster.yml
	@$(call make) postinstall

.PHONY: postinstall
postinstall:
	@cd $(PROVIDER_DIR)/kubespray && \
		$(ANSIBLE_PLAYBOOK) \
			-i inventory/sample/inventory.ini \
			-e script_path="$(CURDIR)/postinstall.sh" \
			-u admin --become --become-user=root \
			$(CURDIR)/postinstall.yml

.PHONY: remove/%
remove/%:
	@cd $(PROVIDER_DIR)/kubespray && \
		$(ANSIBLE_PLAYBOOK) \
			-i inventory/sample/inventory.ini \
			-e node=$* \
			-e reset_nodes=false \
			-e allow_ungraceful_removal=true \
			-u admin --become --become-user=root \
			remove-node.yml

.PHONY: scale
scale:
	@cd $(PROVIDER_DIR)/kubespray && \
		$(ANSIBLE_PLAYBOOK) \
			-i inventory/sample/inventory.ini \
			-u admin --become --become-user=root \
			scale.yml

.PHONY: login
login:
	@which kubectl >/dev/null 2>&1 || ( \
		curl -LO "https://dl.k8s.io/release/$$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
		sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
	)
	@mkdir -p $(HOME)/.kube
	@HOST_NUMBER="$$(echo "$$(hostname)" | sed 's/[^0-9]//g')"; \
		NODE_IP="$$(cat $(PROVIDER_DIR)/kubespray/inventory/sample/inventory.ini | jc -p --ini-dup | jq -r ".kube_control_plane | to_entries[$$((HOST_NUMBER - 1))].value[0]" | cut -d' ' -f1)"; \
		ssh admin@$$NODE_IP "sudo cat /etc/kubernetes/admin.conf" | \
		perl -MYAML::XS=Load -MJSON=encode_json -E 'say encode_json(Load(do { local $$/; <STDIN> }))' | \
		jq ".clusters[0].cluster.server = \"https://$$NODE_IP:6443\"" | \
		perl -MYAML::XS=Dump -MJSON=decode_json -E 'say Dump(decode_json(do { local $$/; <STDIN> }))' > $(HOME)/.kube/config && \
		echo "logged into $$NODE_IP"
	@chmod 600 $(HOME)/.kube/config

.PHONY: reset
reset:
	@cd $(PROVIDER_DIR)/kubespray && \
		$(ANSIBLE_PLAYBOOK) \
			-i inventory/sample/inventory.ini \
			-u admin --become --become-user=root \
			reset.yml

.PHONY: destroy
destroy: init
	@. $(ROOT_DIR)/.env && \
		$(TERRAFORM) destroy
