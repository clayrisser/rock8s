if [ "$SSH_PUBLIC_KEYS_B64" = "" ]; then
    SSH_PUBLIC_KEYS_B64="$(cat $HOME/.ssh/id_rsa.pub | base64 -w0)"
fi

export TF_VAR_app_dir="$APPS_DIR/$APP"
export TF_VAR_clone="$CLONE"
export TF_VAR_cluster_domain="$CLUSTER_DOMAIN"
export TF_VAR_cluster_prefix="$APP"
export TF_VAR_cluster_prefix="$CLUSTER_PREFIX"
export TF_VAR_control_plane_disk_size="$CONTROL_PLANE_DISK_SIZE"
export TF_VAR_control_plane_memory="$CONTROL_PLANE_MEMORY"
export TF_VAR_control_plane_node_count="$CONTROL_PLANE_NODE_COUNT"
export TF_VAR_control_plane_vcpus="$CONTROL_PLANE_VCPUS"
export TF_VAR_cpu="$CPU"
export TF_VAR_ingress_nginx="$INGRESS_NGINX"
export TF_VAR_ingress_ports="$INGRESS_PORTS"
export TF_VAR_internal_network_bridge="$INTERNAL_NETWORK_BRIDGE"
export TF_VAR_ip_range="$IP_RANGE"
export TF_VAR_iteration="$ITERATION"
export TF_VAR_kube_network_plugin="$KUBE_NETWORK_PLUGIN"
export TF_VAR_kube_version="$KUBE_VERSION"
export TF_VAR_os_disk_storage="$OS_DISK_STORAGE"
export TF_VAR_proxmox_host="$PROXMOX_HOST"
export TF_VAR_proxmox_nodes="$(sudo pvesh get /nodes --output-format json | jq -r '[.[].node] | sort | tojson')"
export TF_VAR_proxmox_parallel="$PROXMOX_PARALLEL"
export TF_VAR_proxmox_timeout="$PROXMOX_TIMEOUT"
export TF_VAR_proxmox_tls_insecure="$PROXMOX_TLS_INSECURE"
export TF_VAR_proxmox_token_id="$PROXMOX_TOKEN_ID"
export TF_VAR_proxmox_token_secret="$PROXMOX_TOKEN_SECRET"
export TF_VAR_public_ips="$PUBLIC_IPS"
export TF_VAR_sockets="$SOCKETS"
export TF_VAR_ssh_public_keys_b64="$SSH_PUBLIC_KEYS_B64"
export TF_VAR_user="$USER"
export TF_VAR_worker_disk_size="$WORKER_DISK_SIZE"
export TF_VAR_worker_memory="$WORKER_MEMORY"
export TF_VAR_worker_node_count="$WORKER_NODE_COUNT"
export TF_VAR_worker_node_data_disk_size="$WORKER_NODE_DATA_DISK_SIZE"
export TF_VAR_worker_node_data_disk_storage="$WORKER_NODE_DATA_DISK_STORAGE"
export TF_VAR_worker_vcpus="$WORKER_VCPUS"
