- name: Check current dashboard configuration
  ansible.builtin.shell: |
    cat > /tmp/check_dashboard.php << 'EOF'
    <?php
    require_once("config.inc");
    require_once("util.inc");
    require_once("config.lib.inc");
    global $config;
    if (!is_array($config)) {
        $config = parse_config();
    }
    $current = array(
      'sequence' => configget_path('widgets/sequence', ''),
      'dashboardcolumns' => configget_path('system/webgui/dashboardcolumns', ''),
      'widgets' => array()
    );
    $left_widgets = {{ (pfsense.dashboard.widgets.left | default([])) | to_json }};
    $right_widgets = {{ (pfsense.dashboard.widgets.right | default([])) | to_json }};
    if (!is_array($left_widgets)) $left_widgets = array();
    if (!is_array($right_widgets)) $right_widgets = array();
    $widget_list = array_merge($left_widgets, $right_widgets);
    foreach ($widget_list as $widget) {
      $config_key = $widget . '-config';
      $current['widgets'][$widget] = array(
        'enable' => configget_path('widgets/' . $config_key . '/enable', '0'),
        'name' => configget_path('widgets/' . $config_key . '/name', ''),
        'display' => configget_path('widgets/' . $config_key . '/display', '')
      );
    }
    $sequence_parts = array();
    $position = 0;
    foreach ($left_widgets as $widget) {
      $sequence_parts[] = $widget . ':col1:open:' . $position;
      $position++;
    }
    $position = 0;
    foreach ($right_widgets as $widget) {
      $sequence_parts[] = $widget . ':col2:open:' . $position;
      $position++;
    }
    $desired = array(
      'sequence' => implode(',', $sequence_parts),
      'dashboardcolumns' => '2',
      'widgets' => array()
    );
    foreach ($widget_list as $widget) {
      $desired['widgets'][$widget] = array(
        'enable' => '1',
        'name' => $widget,
        'display' => 'open'
      );
    }
    echo json_encode(array(
      'changed' => $current != $desired,
      'current' => $current,
      'desired' => $desired
    ));
    EOF
    php -f /tmp/check_dashboard.php
    rm -f /tmp/check_dashboard.php
  register: dashboard_check
  changed_when: (dashboard_check.stdout | from_json).changed

- name: Configure dashboard
  ansible.builtin.shell: |
    cat > /tmp/update_dashboard.php << 'EOF'
    <?php
    require_once("config.inc");
    require_once("util.inc");
    require_once("config.lib.inc");
    global $config;
    if (!is_array($config)) {
        $config = parse_config();
    }
    config_set_path('system/webgui/dashboardcolumns', '2');
    $left_widgets = {{ (pfsense.dashboard.widgets.left | default([])) | to_json }};
    $right_widgets = {{ (pfsense.dashboard.widgets.right | default([])) | to_json }};
    if (!is_array($left_widgets)) $left_widgets = array();
    if (!is_array($right_widgets)) $right_widgets = array();
    $widget_list = array_merge($left_widgets, $right_widgets);
    $sequence_parts = array();
    $position = 0;
    foreach ($left_widgets as $widget) {
      $sequence_parts[] = $widget . ':col1:open:' . $position;
      $position++;
    }
    $position = 0;
    foreach ($right_widgets as $widget) {
      $sequence_parts[] = $widget . ':col2:open:' . $position;
      $position++;
    }
    config_set_path('widgets/sequence', implode(',', $sequence_parts));
    config_set_path('widgets/period', '10');
    foreach ($widget_list as $widget) {
      $config_key = $widget . '-config';
      config_set_path('widgets/' . $config_key . '/enable', '1');
      config_set_path('widgets/' . $config_key . '/name', $widget);
      config_set_path('widgets/' . $config_key . '/display', 'open');
    }
    write_config(sprintf('Updated dashboard configuration from ansible (%s@%s)', '{{ ansible_user }}', '{{ ansible_host }}'));
    EOF
    {% if dashboard_check is changed %}
    php -f /tmp/update_dashboard.php
    {% endif %}
    rm -f /tmp/update_dashboard.php
  changed_when: dashboard_check is changed
